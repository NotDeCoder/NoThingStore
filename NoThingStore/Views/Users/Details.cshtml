@using Microsoft.AspNetCore.Identity;
@model Microsoft.AspNetCore.Identity.IdentityUser

@{
    ViewData["Title"] = "Details";
    var userManager = Context.RequestServices.GetService<UserManager<IdentityUser>>();
    var roles = userManager.GetRolesAsync(Model).Result;
}

<h1>Details</h1>

<div>
    <h4>User</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UserName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.UserName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EmailConfirmed)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EmailConfirmed)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PasswordHash)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PasswordHash)
        </dd>
        <dt class="col-sm-2">
            Roles
        </dt>
        <dd class="col-sm-10">
            @foreach (var role in roles)
            {
                @role@(role != roles.Last() ? ", " : "")
            }
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
